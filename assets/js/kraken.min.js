/*! For license information please see kraken.min.js.LICENSE */
!function(e){var t={};function n(a){if(t[a])return t[a].exports;var r=t[a]={i:a,l:!1,exports:{}};return e[a].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,a){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:a})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var a=Object.create(null);if(n.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(a,r,function(t){return e[t]}.bind(null,r));return a},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s="./assets/js/src/index.js")}({"./assets/css/src/style.scss":function(e,t,n){},"./assets/js/src/index.js":function(e,t,n){"use strict";n.r(t);n("./assets/css/src/style.scss");var a=window.jQuery;function r(e,t,n,i,o){var s=e.parents(".kraken-bulk-optimizer").find(".kraken-bulk-table tbody"),c=t.shift(),u=e.find(".spinner");if(void 0===c)return o<i?function(e,t,n,i){a.ajax({type:"POST",url:window.kraken_options.ajax_url,data:{action:"kraken_get_bulk_pages",paged:i,nonce:window.kraken_options.nonce},success:function(a){var o=a.data;o.ids.length>0&&r(e,o.ids,t,n,i)},error:function(){}})}(e,n,i,o+=1):u.removeClass("is-active"),!1;n+=1,a.ajax({type:"POST",url:window.kraken_options.ajax_url,data:{action:"kraken_optimize_image",id:c,type:"bulk",nonce:window.kraken_options.nonce},success:function(c){c.success&&s.append(a(c.data.html)),a(".optimized").text(n),r(e,t,n,i,o)},error:function(){a(".optimized").text(n),r(e,t,n,i,o)}})}a(document).on("click",".kraken-stats-action-show-details",(function(e){e.preventDefault(),a(this).next().toggleClass("is-visible")})),a(document).on("click",".kraken-stats-action-popup-close",(function(e){e.preventDefault(),a(this).parent().removeClass("is-visible")})),a(document).on("click",".kraken-stats-action-reset-image",(function(e){if(e.preventDefault(),confirm(window.kraken_options.texts.reset_image)){var t=a(this),n=t.data("id");t.find(".spinner").addClass("is-active"),a.ajax({type:"POST",url:window.kraken_options.ajax_url,data:{action:"kraken_reset_image",id:n,nonce:window.kraken_options.nonce},success:function(e){e.success?t.parents(".kraken-stats-media-column").replaceWith(e.data.html):alert(window.kraken_options.texts.error_reset)},error:function(){alert(window.kraken_options.texts.error_reset)}})}})),a(document).on("click",".kraken-button-optimize-image",(function(e){e.preventDefault();var t=a(this),n=t.find(".spinner"),r=t.data("id");n.addClass("is-active"),a.ajax({type:"POST",url:window.kraken_options.ajax_url,data:{action:"kraken_optimize_image",id:r,type:"single",nonce:window.kraken_options.nonce},success:function(e){e.success?t.parents(".kraken-stats-media-column").replaceWith(e.data.html):(alert(window.kraken_options.texts.error_reset),n.removeClass("is-active"))},error:function(){alert(window.kraken_options.texts.error_reset),n.removeClass("is-active")}})})),a(document).on("click",".kraken-button-bulk-optimize",(function(e){e.preventDefault();var t=a(this),n=t.find(".spinner"),i=t.data("pages"),o=t.data("ids");t.parents(".kraken-bulk-actions").addClass("is-active"),n.addClass("is-active"),r(t,o,0,i,1)})),a(document).on("click",".kraken-bulk-close-modal",(function(e){e.preventDefault(),a(this).parents(".kraken-modal").removeClass("is-active")})),function(e,t){if(0===e.length)return!1;var n=e.find("canvas")[0].getContext("2d"),a=Math.PI/180,r=e.data("percent"),i=e.data("color"),o=(t-10)/2,s=t/2,c=3.6*r;n.strokeStyle=i,n.lineWidth=10,n.clearRect(0,0,t,t),n.beginPath(),n.arc(s,s,o,270*a,a*(270+c)),n.stroke()}(a(".kraken-progress-circle"),120)}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,